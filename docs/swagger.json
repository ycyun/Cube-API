{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "API Support",
      "url": "http://www.swagger.io/support",
      "email": "support@swagger.io"
    }
  },
  "paths": {
    "/glue": {
      "get": {
        "description": "GLUE의 상태값을 보여줍니다.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "API",
          "Glue",
          "GLUE"
        ],
        "summary": "Show Status of GLUE",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeGlueStatus"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/HTTP400BadRequest"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/HTTP404NotFound"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/HTTP500InternalServerError"
            }
          }
        }
      }
    },
    "/mold": {
      "get": {
        "description": "MOLD의 상태값을 보여줍니다.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "API",
          "Mold",
          "MOLD"
        ],
        "summary": "Show Status of MOLD",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeMoldStatus"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/HTTP400BadRequest"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/HTTP404NotFound"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/HTTP500InternalServerError"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "description": "API 의 버전을 보여줍니다.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "API"
        ],
        "summary": "Show Versions of API",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/action.TypeCUBEVersion"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/HTTP400BadRequest"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/HTTP404NotFound"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/HTTP500InternalServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "HTTP400BadRequest": {
      "type": "object",
      "properties": {
        "err_code": {
          "type": "integer",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "status bad request"
        }
      }
    },
    "HTTP404NotFound": {
      "type": "object",
      "properties": {
        "err_code": {
          "type": "integer",
          "example": 404
        },
        "message": {
          "type": "string",
          "example": "Not Found"
        }
      }
    },
    "HTTP500InternalServerError": {
      "type": "object",
      "properties": {
        "err_code": {
          "type": "integer",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "InternalServerError"
        }
      }
    },
    "TypeGlueStatus": {
      "description": "Glue의 상태를 나타내는 구조체",
      "type": "object",
      "properties": {
        "election_epoch": {
          "type": "integer",
          "format": "uint32",
          "example": 148
        },
        "fsid": {
          "description": "Glue클러스터를 구분하는 ID",
          "type": "string",
          "format": "uuid",
          "example": "9980ffe8-4bc1-11ee-9b1f-002481004170"
        },
        "fsmap": {
          "type": "object",
          "properties": {
            "by_rank": {
              "type": "array",
              "items": {}
            },
            "epoch": {
              "type": "integer"
            },
            "up:standby": {
              "type": "integer"
            }
          }
        },
        "health": {
          "type": "object",
          "properties": {
            "checks": {},
            "mutes": {},
            "status": {
              "type": "string",
              "format": "string",
              "example": "HEALTH_WARN"
            }
          }
        },
        "mgrmap": {
          "type": "object",
          "properties": {
            "available": {
              "type": "boolean"
            },
            "modules": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "num_standbys": {
              "type": "integer"
            },
            "services": {
              "type": "object",
              "properties": {
                "dashboard": {
                  "type": "string"
                },
                "prometheus": {
                  "type": "string"
                }
              }
            }
          }
        },
        "monmap": {
          "type": "object",
          "properties": {
            "epoch": {
              "type": "integer"
            },
            "min_mon_release_name": {
              "type": "string"
            },
            "num_mons": {
              "type": "integer"
            }
          }
        },
        "osdmap": {
          "type": "object",
          "properties": {
            "epoch": {
              "type": "integer"
            },
            "num_in_osds": {
              "type": "integer"
            },
            "num_osds": {
              "type": "integer"
            },
            "num_remapped_pgs": {
              "type": "integer"
            },
            "num_up_osds": {
              "type": "integer"
            },
            "osd_in_since": {
              "type": "integer"
            },
            "osd_up_since": {
              "type": "integer"
            }
          }
        },
        "pgmap": {
          "type": "object",
          "properties": {
            "bytes_avail": {
              "type": "integer"
            },
            "bytes_total": {
              "type": "integer"
            },
            "bytes_used": {
              "type": "integer"
            },
            "data_bytes": {
              "type": "integer"
            },
            "num_objects": {
              "type": "integer"
            },
            "num_pgs": {
              "type": "integer"
            },
            "num_pools": {
              "type": "integer"
            },
            "pgs_by_state": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "state_name": {
                    "type": "string"
                  }
                }
              }
            },
            "read_bytes_sec": {
              "type": "integer"
            },
            "read_op_per_sec": {
              "type": "integer"
            },
            "write_bytes_sec": {
              "type": "integer"
            },
            "write_op_per_sec": {
              "type": "integer"
            }
          }
        },
        "progress_events": {
          "type": "object"
        },
        "quorum": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "quorum_age": {
          "type": "integer"
        },
        "quorum_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "refresh_time": {
          "type": "string"
        },
        "servicemap": {
          "type": "object",
          "properties": {
            "epoch": {
              "type": "integer"
            },
            "modified": {
              "type": "string"
            },
            "services": {}
          }
        }
      }
    },
    "TypeMoldStatus": {
      "description": "Glue의 상태를 나타내는 구조체",
      "type": "object",
      "properties": {
        "election_epoch": {
          "type": "integer",
          "format": "uint32",
          "example": 148
        },
        "fsid": {
          "description": "Glue클러스터를 구분하는 ID",
          "type": "string",
          "format": "uuid",
          "example": "9980ffe8-4bc1-11ee-9b1f-002481004170"
        },
        "fsmap": {
          "type": "object",
          "properties": {
            "by_rank": {
              "type": "array",
              "items": {}
            },
            "epoch": {
              "type": "integer"
            },
            "up:standby": {
              "type": "integer"
            }
          }
        },
        "health": {
          "type": "object",
          "properties": {
            "checks": {},
            "mutes": {},
            "status": {
              "type": "string",
              "format": "string",
              "example": "HEALTH_WARN"
            }
          }
        },
        "mgrmap": {
          "type": "object",
          "properties": {
            "available": {
              "type": "boolean"
            },
            "modules": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "num_standbys": {
              "type": "integer"
            },
            "services": {
              "type": "object",
              "properties": {
                "dashboard": {
                  "type": "string"
                },
                "prometheus": {
                  "type": "string"
                }
              }
            }
          }
        },
        "monmap": {
          "type": "object",
          "properties": {
            "epoch": {
              "type": "integer"
            },
            "min_mon_release_name": {
              "type": "string"
            },
            "num_mons": {
              "type": "integer"
            }
          }
        },
        "osdmap": {
          "type": "object",
          "properties": {
            "epoch": {
              "type": "integer"
            },
            "num_in_osds": {
              "type": "integer"
            },
            "num_osds": {
              "type": "integer"
            },
            "num_remapped_pgs": {
              "type": "integer"
            },
            "num_up_osds": {
              "type": "integer"
            },
            "osd_in_since": {
              "type": "integer"
            },
            "osd_up_since": {
              "type": "integer"
            }
          }
        },
        "pgmap": {
          "type": "object",
          "properties": {
            "bytes_avail": {
              "type": "integer"
            },
            "bytes_total": {
              "type": "integer"
            },
            "bytes_used": {
              "type": "integer"
            },
            "data_bytes": {
              "type": "integer"
            },
            "num_objects": {
              "type": "integer"
            },
            "num_pgs": {
              "type": "integer"
            },
            "num_pools": {
              "type": "integer"
            },
            "pgs_by_state": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "state_name": {
                    "type": "string"
                  }
                }
              }
            },
            "read_bytes_sec": {
              "type": "integer"
            },
            "read_op_per_sec": {
              "type": "integer"
            },
            "write_bytes_sec": {
              "type": "integer"
            },
            "write_op_per_sec": {
              "type": "integer"
            }
          }
        },
        "progress_events": {
          "type": "object"
        },
        "quorum": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "quorum_age": {
          "type": "integer"
        },
        "quorum_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "refresh_time": {
          "type": "string"
        },
        "servicemap": {
          "type": "object",
          "properties": {
            "epoch": {
              "type": "integer"
            },
            "modified": {
              "type": "string"
            },
            "services": {}
          }
        }
      }
    },
    "action.TypeCUBEVersion": {
      "type": "object",
      "properties": {
        "debug": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      }
    }
  }
}